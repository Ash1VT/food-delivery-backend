version: '3.6'
name: 'user'

services:
    db:
        image: postgres:15.4-alpine
        container_name: user-postgres
        ports:
          - "5432:5432"
        volumes:
          - ~/apps/postgres/user:/var/lib/postgresql/data
        environment:
          - PGPORT=5432
          - POSTGRES_USER=${PG_USER}
          - POSTGRES_PASSWORD=${PG_PASSWORD}
          - POSTGRES_DB=user
        expose:
          - "5432"
        networks:
          - user_network
    app:
        build:
          context: ../
          dockerfile: ./docker/app/Dockerfile
        container_name: user-app
        ports:
          - "8000:8000"
          - "50051:50051"
        environment:
          - SECRET_KEY=${SECRET_KEY}
          - DJANGO_CONFIGURATION=Develop
          - WEB_APP_PROTOCOL=http
          - WEB_APP_HOST=user-app
          - WEB_APP_PORT=8000
          - GRPC_SERVER_PORT=50051
          - PG_HOST=db
          - PG_PORT=5432
          - PG_DATABASE=user
          - PG_USER=${PG_USER}
          - PG_PASSWORD=${PG_PASSWORD}
          - EMAIL_HOST=${EMAIL_HOST}
          - EMAIL_HOST_USER=${EMAIL_HOST_USER}
          - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
          - EMAIL_PORT=${EMAIL_PORT}
          - EMAIL_USE_SSL=${EMAIL_USE_SSL}
          - KAFKA_BOOTSTRAP_SERVER_HOST=kafka
          - KAFKA_BOOTSTRAP_SERVER_PORT=9092
          - KAFKA_BROKER_USER=${KAFKA_BROKER_USER}
          - KAFKA_BROKER_PASSWORD=${KAFKA_BROKER_PASSWORD}
          - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
        depends_on:
          - db
        expose:
          - "50051"
        networks:
          - kafka_kafka_network
          - user_network
          - grpc_network

networks:
  kafka_kafka_network:
    external: true
  user_network:
  grpc_network:
